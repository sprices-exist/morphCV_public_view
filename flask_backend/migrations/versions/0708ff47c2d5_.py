"""empty message

Revision ID: 0708ff47c2d5
Revises: 
Create Date: 2025-06-17 15:30:03.010823

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0708ff47c2d5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('google_id', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('profile_pic', sa.String(length=200), nullable=True),
    sa.Column('user_tier', sa.Enum('FREE', 'PRO', 'ENTERPRISE', name='usertier'), nullable=False),
    sa.Column('generations_left', sa.Integer(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=100), nullable=True),
    sa.Column('subscription_id', sa.String(length=100), nullable=True),
    sa.Column('subscription_status', sa.String(length=50), nullable=True),
    sa.Column('subscription_current_period_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_email', ['email'], unique=False)
        batch_op.create_index('idx_user_google_id', ['google_id'], unique=False)
        batch_op.create_index('idx_user_stripe_customer', ['stripe_customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_google_id'), ['google_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_stripe_customer_id'), ['stripe_customer_id'], unique=False)

    op.create_table('cvs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('template_name', sa.String(length=50), nullable=False),
    sa.Column('user_data', sa.Text(), nullable=False),
    sa.Column('job_description', sa.Text(), nullable=False),
    sa.Column('latex_code', sa.Text(), nullable=True),
    sa.Column('pdf_path', sa.String(length=255), nullable=True),
    sa.Column('jpg_path', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'SUCCESS', 'FAILED', name='cvstatus'), nullable=False),
    sa.Column('task_id', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('pdf_size', sa.Integer(), nullable=True),
    sa.Column('generation_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_downloaded', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cvs', schema=None) as batch_op:
        batch_op.create_index('idx_cv_status', ['status'], unique=False)
        batch_op.create_index('idx_cv_task_id', ['task_id'], unique=False)
        batch_op.create_index('idx_cv_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_cv_uuid', ['uuid'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_task_id'), ['task_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_cvs_uuid'), ['uuid'], unique=True)

    op.create_table('token_blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_type', sa.String(length=20), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.create_index('idx_token_blacklist_jti', ['jti'], unique=False)
        batch_op.create_index('idx_token_blacklist_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_token_blacklist_jti'), ['jti'], unique=True)
        batch_op.create_index(batch_op.f('ix_token_blacklist_user_id'), ['user_id'], unique=False)

    op.create_table('download_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=36), nullable=True),
    sa.Column('cv_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=10), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cvs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('download_tokens', schema=None) as batch_op:
        batch_op.create_index('idx_download_token', ['token'], unique=False)
        batch_op.create_index(batch_op.f('ix_download_tokens_token'), ['token'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('download_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_download_tokens_token'))
        batch_op.drop_index('idx_download_token')

    op.drop_table('download_tokens')
    with op.batch_alter_table('token_blacklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blacklist_user_id'))
        batch_op.drop_index(batch_op.f('ix_token_blacklist_jti'))
        batch_op.drop_index('idx_token_blacklist_user')
        batch_op.drop_index('idx_token_blacklist_jti')

    op.drop_table('token_blacklist')
    with op.batch_alter_table('cvs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cvs_uuid'))
        batch_op.drop_index(batch_op.f('ix_cvs_user_id'))
        batch_op.drop_index(batch_op.f('ix_cvs_task_id'))
        batch_op.drop_index('idx_cv_uuid')
        batch_op.drop_index('idx_cv_user_id')
        batch_op.drop_index('idx_cv_task_id')
        batch_op.drop_index('idx_cv_status')

    op.drop_table('cvs')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_stripe_customer_id'))
        batch_op.drop_index(batch_op.f('ix_users_google_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index('idx_user_stripe_customer')
        batch_op.drop_index('idx_user_google_id')
        batch_op.drop_index('idx_user_email')

    op.drop_table('users')
    # ### end Alembic commands ###
